// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class BeanCreated extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save BeanCreated entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save BeanCreated entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("BeanCreated", id.toString(), this);
  }

  static load(id: string): BeanCreated | null {
    return store.get("BeanCreated", id) as BeanCreated | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get tokenId(): BigInt {
    let value = this.get("tokenId");
    return value.toBigInt();
  }

  set tokenId(value: BigInt) {
    this.set("tokenId", Value.fromBigInt(value));
  }

  get typeRef(): string {
    let value = this.get("typeRef");
    return value.toString();
  }

  set typeRef(value: string) {
    this.set("typeRef", Value.fromString(value));
  }
}

export class AuctionCreated extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save AuctionCreated entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save AuctionCreated entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("AuctionCreated", id.toString(), this);
  }

  static load(id: string): AuctionCreated | null {
    return store.get("AuctionCreated", id) as AuctionCreated | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get nounId(): BigInt {
    let value = this.get("nounId");
    return value.toBigInt();
  }

  set nounId(value: BigInt) {
    this.set("nounId", Value.fromBigInt(value));
  }

  get startTime(): BigInt {
    let value = this.get("startTime");
    return value.toBigInt();
  }

  set startTime(value: BigInt) {
    this.set("startTime", Value.fromBigInt(value));
  }

  get endTime(): BigInt {
    let value = this.get("endTime");
    return value.toBigInt();
  }

  set endTime(value: BigInt) {
    this.set("endTime", Value.fromBigInt(value));
  }
}
